
@model Shared.Comments
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Task</title>

    <link href='https://fonts.googleapis.com/css?family=Nunito:400,300' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="~/Content/addTask.css">
</head>


@using (Html.BeginForm("UpdateComment", "Comment", FormMethod.Post, new { @style = " max-width: 100% !important ;" }))

{
    @Html.AntiForgeryToken()
    <h1>Update Comment</h1>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.TaskID)
    <fieldset>
        <legend><span class="number">1</span> Comment Info</legend>
        <label for="name" class="labelTask">ReminderDate</label>
        @Html.EditorFor(model => model.ReminderDate, "{0:dd-MM-yyyy}", new { id = "name", name = "user_name" })
        @Html.ValidationMessageFor(model => model.ReminderDate, "", new { @class = "text-danger" })

        <label for="bio" class="labelTask">Comment</label>
        @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { id = "bio", name = "user_bio" } })
        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        <label for="job" class="labelTask">Type</label>
        @Html.DropDownListFor(model => model.Type, ((List<Shared.CommentType>)ViewData["CommentType"]).Select(m => new SelectListItem { Text = m.Name, Value = m.ID.ToString() }), new { htmlAttributes = new { id = "job", name = "user_job" } })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

        <div>
            <button type="submit">Update</button>
        </div>

    </fieldset>


}





